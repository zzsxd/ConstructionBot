from telebot import types


class Bot_inline_btns:
    def __init__(self):
        super(Bot_inline_btns, self).__init__()
        self.__markup = types.InlineKeyboardMarkup(row_width=1)

    def unregister_buttons(self):
        one = types.InlineKeyboardButton('üìÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data="registration_foreman")
        self.__markup.add(one)
        return self.__markup
    
    def foreman_buttons(self):
        one = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –æ–±—ä–µ–∫—Ç", callback_data="foreman_select_objects")
        two = types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—å–µ–∫—Ç–µ", callback_data="foreman_check_object")
        self.__markup.add(one, two)
        return self.__markup
    
    def manager_btns(self):
        one = types.InlineKeyboardButton('‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data="accept_reg")
        two = types.InlineKeyboardButton('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='reject_reg')
        self.__markup.add(one, two)
        return self.__markup
    
    
    def admin_buttons(self):
        one = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç", callback_data="add_object")
        two = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç", callback_data="delete_object")
        three = types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç—ã", callback_data="see_objects")
        four = types.InlineKeyboardButton("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –ø—Ä–æ—Ä–∞–±–∞", callback_data="attach_foreman_to_object")
        # one = types.InlineKeyboardButton('üîπ –≠–∫—Å–ø–æ—Ä–∏—Ä–æ–≤–∞—Ç—å', callback_data="export_users")
        self.__markup.add(one, two, three, four)
        return self.__markup
    
    def delete_object_buttons(self, data):
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in data:
            aero = types.InlineKeyboardButton(i[1], callback_data=f'object{i[1]}')
            markup.add(aero)
        return markup
    
    def get_object_buttons(self, data):
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in data:
            aero = types.InlineKeyboardButton(i[0], callback_data=f'foreman_object{i[0]}')
            markup.add(aero)
        return markup
    
    def get_info_object_buttons(self, data):
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in data:
            aero = types.InlineKeyboardButton(i[0], callback_data=f'foreman_info_object{i[0]}')
            markup.add(aero)
        return markup
    
    def choose_object_to_attach(self, data):
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in data:
            aero = types.InlineKeyboardButton(i[1], callback_data=f'choose_object_attach{i[1]}')
            markup.add(aero)
        return markup
    
    def choose_foreman_to_attach(self, data):
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in data:
            aero = types.InlineKeyboardButton(i[1], callback_data=f'choose_foreman_attach{i[0]}')
            markup.add(aero)
        return markup

    def name_of_where_work(self):
        one = types.InlineKeyboardButton("–ù–∞ –∫—Ä–æ–≤–ª–µ –ø–∞—Ä–∫–∏–Ω–≥–∞", callback_data="on_roof_parking")
        two = types.InlineKeyboardButton("–í –≥—Ä–∞–Ω–∏—Ü–µ —É—á–∞—Å—Ç–∫–∞ –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–∞–±–æ—Ç", callback_data='in_site_boundary')
        self.__markup.add(one, two)
        return self.__markup

    def roof_parking_work(self):
        one = types.InlineKeyboardButton("–ë–æ—Ä–¥—é—Ä –∏ –ø–æ—Ä–µ–±—Ä–∏–∫", callback_data="curb_curbstone")
        two = types.InlineKeyboardButton("–¢—Ä–æ—Ç—É–∞—Ä –∏ –æ—Ç–º–æ—Å—Ç–∫–∞", callback_data="sidewalk_area")
        three = types.InlineKeyboardButton("–¢–∞—Ä—Ç–∞–Ω–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ", callback_data="tartan_coating")
        self.__markup.add(one, two, three)
        return self.__markup

    def site_boundary_work(self):
        one = types.InlineKeyboardButton("–ó–µ–º–ª—è–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", callback_data="earth_works")
        two = types.InlineKeyboardButton("–ë–æ—Ä—Ç–æ–≤–æ–π –∫–∞–º–µ–Ω—å", callback_data="border_stone")
        three = types.InlineKeyboardButton("–ê—Å—Ñ–∞–ª—å—Ç –ø–æ –ø—Ä–æ–µ–∑–¥–∞–º", callback_data="asphalt_roads")
        four = types.InlineKeyboardButton("–¢—Ä–æ—Ç—É–∞—Ä, –û—Ç–º–æ—Å—Ç–∫–∞", callback_data="sidewalk_blind")
        self.__markup.add(one, two, three, four)
        return self.__markup

    def curb_and_curbstone_work(self):
        one = types.InlineKeyboardButton("–°–∫—Ä—ã—Ç—ã–µ —Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—Ä–µ–±—Ä–∏–∫–∏ (–∫—Ä–∏–≤—ã–µ)", callback_data="hidden_steel_curbs")
        two = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ –ø–æ–¥ –ø–æ—Ä–µ–±—Ä–∏–∫", callback_data="drainage_for_curb")
        three = types.InlineKeyboardButton("–ì—Ä–∞–Ω–∏—Ç–Ω—ã–π –ø–æ—Ä–µ–±—Ä–∏–∫ –ë–†100,20,8", callback_data="granite_curb_100208")
        four = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ –ø–æ–¥ –±–æ—Ä–¥—é—Ä", callback_data="drainage_for_border")
        five = types.InlineKeyboardButton("–ì—Ä–∞–Ω–∏—Ç–Ω—ã–π –±–æ—Ä–¥—é—Ä –ë–†100,30,15", callback_data="granite_border_1003015")
        self.__markup.add(one, two, three, four, five)
        return self.__markup

    def sidewalk_blind_area_work(self):
        one = types.InlineKeyboardButton("–î–µ–º–æ–Ω—Ç–∞–∂ –±—Ä—É—Å—á–∞—Ç–∫–∏", callback_data="pavement_dismantling")
        two = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ (H=0,30–º)", callback_data="drainage_layers_30cm")
        three = types.InlineKeyboardButton("–£–∫–ª–∞–¥–∫–∞ –≥–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—è", callback_data="geotextile_laying")
        four = types.InlineKeyboardButton("–ü–æ–∫—Ä—ã—Ç–∏–µ —Ç—Ä–æ—Ç—É–∞—Ä–∞ —Ç–∏–ø 1", callback_data="sidewalk_type1")
        self.__markup.add(one, two, three, four)
        return self.__markup

    def tartan_covering_work(self):
        one = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ (H=300-400–º–º)", callback_data="drainage_300_400")
        two = types.InlineKeyboardButton("–ë–µ—Ç–æ–Ω–Ω–æ–µ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–¥ —Ç–∞—Ä—Ç–∞–Ω", callback_data="concrete_base_tartan")
        self.__markup.add(one, two)
        return self.__markup

    def earthworks_work(self):
        one = types.InlineKeyboardButton("–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –∑–µ–º–ª—è–Ω–æ–≥–æ –ø–æ–ª–æ—Ç–Ω–∞", callback_data="ground_leveling")
        two = types.InlineKeyboardButton("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ç–ª–æ–≤–∞–Ω–∞", callback_data="pit_excavation")
        three = types.InlineKeyboardButton("–£–ø–ª–æ—Ç–Ω–µ–Ω–∏–µ", callback_data="compaction")
        four = types.InlineKeyboardButton("–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –≥—Ä—É–Ω—Ç–∞ (–¥–æ 1–∫–º)", callback_data="soil_transport_1km")
        self.__markup.add(one, two, three, four)
        return self.__markup

    def curbstone_work(self):
        one = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ –¥–ª—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–ø–æ—Ä–µ–±—Ä–∏–∫)", callback_data="yard_drainage_porebrik")
        two = types.InlineKeyboardButton("–ì—Ä–∞–Ω–∏—Ç–Ω—ã–π –ø–æ—Ä–µ–±—Ä–∏–∫ (–ø—Ä—è–º–æ–π)", callback_data="straight_granite_curb")
        three = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ –¥–ª—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–±–æ—Ä–¥—é—Ä)", callback_data="yard_drainage_bordur")
        four = types.InlineKeyboardButton("–ë–æ—Ä–¥—é—Ä –≥—Ä–∞–Ω–∏—Ç–Ω—ã–π (–ø—Ä—è–º–æ–π)", callback_data="straight_granite_border")
        self.__markup.add(one, two, three, four)
        return self.__markup

    def asphalt_driveways_work(self):
        one = types.InlineKeyboardButton("–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∏—è (–±—É—Ç)", callback_data="base_stabilization")
        two = types.InlineKeyboardButton("–û—Å–Ω–æ–≤–∞–Ω–∏–µ –∏–∑ —â–µ–±–Ω—è", callback_data="gravel_base")
        three = types.InlineKeyboardButton("–†–æ–∑–ª–∏–≤ –ø–µ—Ä–µ–¥ –ö–ó", callback_data="pre_KZ_pouring")
        four = types.InlineKeyboardButton("–ö—Ä—É–ø–Ω–æ–∑–µ—Ä–Ω–∏—Å—Ç—ã–π –∞—Å—Ñ–∞–ª—å—Ç 6—Å–º", callback_data="coarse_asphalt_6cm")
        five = types.InlineKeyboardButton("–†–æ–∑–ª–∏–≤ –ø–µ—Ä–µ–¥ –ú–ó", callback_data="pre_MZ_pouring")
        six = types.InlineKeyboardButton("–ú–µ–ª–∫–æ–∑–µ—Ä–Ω–∏—Å—Ç—ã–π –∞—Å—Ñ–∞–ª—å—Ç 5—Å–º", callback_data="fine_asphalt_5cm")
        self.__markup.add(one, two, three, four, five, six)
        return self.__markup

    def sidewalk_blind_word(self):
        one = types.InlineKeyboardButton("–î—Ä–µ–Ω–∏—Ä—É—é—â–∏–µ —Å–ª–æ–∏ (H=15—Å–º)", callback_data="drainage_15cm")
        two = types.InlineKeyboardButton("–ü–æ–∫—Ä—ã—Ç–∏–µ —Ç—Ä–æ—Ç—É–∞—Ä–∞/–æ—Ç–º–æ—Å—Ç–∫–∏", callback_data="sidewalk_coating")
        self.__markup.add(one, two)
        return self.__markup