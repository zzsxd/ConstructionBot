import time
import telebot
import os
import re
import json
import threading
import platform
from telebot import types
from threading import Lock
from config_parser import ConfigParser
from frontend import Bot_inline_btns
from backend import DbAct
from db import DB

config_name = 'secrets.json'


def main():
    @bot.message_handler(commands=['start', 'admin'])
    def start(message):
        command = message.text.replace('/', '')
        user_id = message.from_user.id
        buttons = Bot_inline_btns()
        if command == 'start':
            db_actions.set_user_system_key(user_id, "index", None)
            if db_actions.user_is_existed(user_id) and db_actions.user_is_foreman(user_id):
                bot.send_message(user_id, "üë∑‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç.\n" \
                "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã.\n\n" \
                "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –æ–±—ä–µ–∫—Ç –Ω–∏–∂–µ üëá", reply_markup=buttons.foreman_buttons())
            else:
                db_actions.add_user(user_id, None, f'@{message.from_user.username}', None)
                bot.send_message(user_id, "üë∑‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç.\n" \
                "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã.\n\n" \
                "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá", reply_markup=buttons.unregister_buttons())
        elif command == 'admin':
            if db_actions.user_is_admin(user_id):
                bot.send_message(user_id, "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å!</b>"
                             "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∏–∂–µ!", reply_markup=buttons.admin_buttons(), parse_mode='HTML')
            else:
                bot.send_message(user_id, "<b>–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>", parse_mode='HTML')

    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        user_id = call.message.chat.id
        buttons = Bot_inline_btns()
        if db_actions.user_is_existed(user_id):
            if db_actions.user_is_admin(user_id):
                if call.data == "add_object":
                    db_actions.set_user_system_key(user_id, "index", 1)
                    bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
                elif call.data == "delete_object":
                    objects = db_actions.get_all_objects(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è\n\n" \
                    "–£—á—Ç–∏—Ç–µ! –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞, —É–¥–∞–ª—è—Ç—å—Å—è –∑–∞–ø–∏—Å–∏ –æ –Ω–µ–º!", reply_markup=buttons.delete_object_buttons(objects))
                elif call.data[:6] == "object":
                    object_name = call.data[6:]
                    db_actions.delete_object(user_id, object_name)
                    bot.send_message(user_id, "–û–±—ä–µ–∫—Ç —É–¥–∞–ª–µ–Ω! ‚úÖ")
                elif call.data == "export_object_data":
                    objects = db_actions.get_admin_objects(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç", reply_markup=buttons.choose_object_export(objects))
                elif call.data[:17] == "export_objectdata":
                    object_id = call.data[17:]
                    if db_actions.db_export_object_report(object_id):
                        if os.path.exists(config.get_config()['xlsx_path']):
                            with open(config.get_config()['xlsx_path'], 'rb') as f:
                                bot.send_document(user_id, f)
                            os.remove(config.get_config()['xlsx_path'])
                        else:
                            bot.send_message(user_id, "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
                    else:
                        bot.send_message(user_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞")
                elif call.data == "see_objects":
                    try:
                        objects = db_actions.get_all_objects(user_id)    
                        if not objects:
                            bot.send_message(user_id, "–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤")
                            return
                        objects_info = []
                        for obj in objects:
                            foremen = db_actions.get_name_from_user_id(obj[0])  # obj[0] - user_id
                            if not foremen:
                                objects_info.append(f"{obj[1]} - –ù–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ä–∞–±–∞")
                            else:
                                for foreman in foremen:
                                    objects_info.append(f"{obj[1]} - {foreman[0]}")  # foreman[0] - full_name
                        message = (
                            "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤:\n"
                            "–§–æ—Ä–º–∞—Ç: –û–±—ä–µ–∫—Ç - –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ä–∞–±\n\n"
                            + "\n".join(objects_info)
                        )
                        bot.send_message(user_id, message)
                    except Exception as e:
                        bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
                elif call.data == "control_object":
                    admin_object = db_actions.get_admin_objects(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç", reply_markup=buttons.choose_control_object(admin_object))
                elif call.data[:20] == "admin_object_control":
                    db_actions.set_user_system_key(user_id, "admin_object_id", call.data[20:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", reply_markup=buttons.control_object_panel())
                elif call.data == "category_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.control_category_buttons())
                elif call.data == "subcategory_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.control_subcategory_buttons())
                elif call.data == "work_type_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.control_work_type_buttons())
                elif call.data == "material_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.material_control_buttons())
                elif call.data == "coming_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.control_coming_buttons())
                elif call.data == "technical_control":
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", reply_markup=buttons.technical_control_buttons())
                elif call.data == "delete_technical":
                    technique_list = db_actions.get_list_technique(user_id, object_id=db_actions.get_user_system_key(user_id, "object_id"))
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É", reply_markup=buttons.admin_choose_technical_delete(technique_list))
                elif call.data[:21] == "technique_list_delete":
                    db_actions.delete_technique(user_id, call.data[21:])
                    bot.send_message(user_id, "–¢–µ—Ö–Ω–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞ ‚úÖ")
                elif call.data == "delete_coming":
                    coming_list = db_actions.get_from_list_coming(user_id, object_id=db_actions.get_user_system_key(user_id, "admin_object_id"))
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –ø—Ä–∏—Ö–æ–¥–∞", reply_markup=buttons.choose_coming_buttons(coming_list))
                elif call.data[:19] == "admin_delete_coming":
                    db_actions.delete_from_list_coming(user_id, call.data[19:])
                    bot.send_message(user_id, "–ü—Ä–∏—Ö–æ–¥ —É–¥–∞–ª–µ–Ω ‚úÖ")
                elif call.data == "add_category":
                    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
                    db_actions.set_user_system_key(user_id, "index", 2)
                elif call.data == "delete_category":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    category = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è\n\n" \
                    "–£—á—Ç–∏—Ç–µ, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —É–¥–∞–ª—è—Ç—Å—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≤–∏–¥—ã —Ä–∞–±–æ—Ç!", reply_markup=buttons.delete_category_buttons(category))
                elif call.data[:20] == "delete_work_category":
                    category_id = call.data[20:]
                    db_actions.delete_work_categories(user_id, category_id)
                    bot.send_message(user_id, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞ ‚úÖ")
                elif call.data[:23] == "delete_work_subcategory":
                    subcategory_id = call.data[23:]
                    db_actions.delete_work_subcategories(user_id, subcategory_id)
                    bot.send_message(user_id, "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞ ‚úÖ")
                elif call.data[:16] == "delete_work_type":
                    work_type_id = call.data[16:]
                    db_actions.delete_work_type(user_id, work_type_id)
                    bot.send_message(user_id, "–¢–∏–ø —Ä–∞–±–æ—Ç—ã —É–¥–∞–ª–µ–Ω ‚úÖ")
                elif call.data == "add_subcategory":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    if categories:
                        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.choose_add_subcategory(categories))
                    else:
                        bot.send_message(user_id, "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                elif call.data == "delete_subcategory":
                    category_id = db_actions.get_user_system_key(user_id, "category_id")
                    subcategory = db_actions.get_work_subcategories(user_id, category_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è\n\n" \
                    "–£—á—Ç–∏—Ç–µ, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —É–¥–∞–ª—è—Ç—Å—è –≤–∏–¥—ã —Ä–∞–±–æ—Ç!", reply_markup=buttons.delete_subcategory_buttons(subcategory))
                elif call.data == "add_type_work":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    if categories:
                        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_choose_add_work_types(categories))
                    else:
                            bot.send_message(user_id, "‚ùå–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                elif call.data == "delete_type_work":
                    subcategory_id = db_actions.get_user_system_key(user_id, "subcategory_id")
                    work_type = db_actions.get_work_type(user_id, subcategory_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", reply_markup=buttons.delete_work_type(work_type))
                elif call.data == "delete_materials":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    category = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.del_mat_category(category))
                elif call.data[:16] == "delete_mat_categ":
                    subcategory = db_actions.get_work_subcategories(user_id, call.data[16:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.del_mat_subcategory(subcategory))
                elif call.data[:19] == "delete_mat_subcateg":
                    work_types = db_actions.get_work_type(user_id, call.data[19:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.del_mat_work_type(work_types))
                elif call.data[:20] == "delete_mat_type_work":
                    materials = db_actions.get_work_material(user_id, call.data[20:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏ –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", reply_markup=buttons.delete_material_buttons(materials))
                elif call.data[:15] == "material_delete":
                    db_actions.delete_work_material(user_id, call.data[15:])
                    bot.send_message(user_id, "–ú–∞—Ç–µ—Ä–∏–∞–ª —É–¥–∞–ª–µ–Ω ‚úÖ")
                elif call.data == "add_norma":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_category(categories))
                elif call.data == "add_unit":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_category2(categories))
                elif call.data == "add_number":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_category3(categories))
                elif call.data == "edit_smr":
                    object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                    categories = db_actions.get_work_categories(user_id, object_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_category4(categories))
                elif call.data[:14] == "admin_category":
                    subcategories = db_actions.get_work_subcategories(user_id, call.data[14:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_subcategory(subcategories))
                elif call.data[:17] == "admin_subcategory":
                    work_type = db_actions.get_work_type(user_id, call.data[17:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.admin_choose_work_type(work_type))
                elif call.data[:15] == "admin_work_type":
                    db_actions.set_user_system_key(user_id, "work_type_id", call.data[15:])
                    materials = db_actions.get_work_material(user_id, call.data[15:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª", reply_markup=buttons.admin_choose_material(materials))
                elif call.data[:14] == "admin_material":
                    db_actions.set_user_system_key(user_id, "material_id", call.data[14:])
                    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ—Ä–º—É")
                    db_actions.set_user_system_key(user_id, "index", 27)
                elif call.data[:15] == "2admin_category":
                    subcategories = db_actions.get_work_subcategories2(user_id, call.data[15:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_subcategory(subcategories))
                elif call.data[:18] == "2admin_subcategory":
                    work_type = db_actions.get_work_type(user_id, call.data[18:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.admin_choose_work_type(work_type))
                elif call.data[:16] == "2admin_work_type":
                    db_actions.set_user_system_key(user_id, "work_type_id", call.data[16:])
                    materials = db_actions.get_work_material(user_id, call.data[16:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª", reply_markup=buttons.admin_choose_material(materials))
                elif call.data[:15] == "2admin_material":
                    db_actions.set_user_system_key(user_id, "material_id", call.data[15:])
                    bot.send_message(user_id, "üìè –í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")
                    db_actions.set_user_system_key(user_id, "index", 28)
                elif call.data[:15] == "3admin_category":
                    subcategories = db_actions.get_work_subcategories(user_id, call.data[15:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_subcategory(subcategories))
                elif call.data[:18] == "3admin_subcategory":
                    work_type = db_actions.get_work_type(user_id, call.data[18:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.admin_choose_work_type(work_type))
                elif call.data[:16] == "3admin_work_type":
                    db_actions.set_user_system_key(user_id, "work_type_id", call.data[16:])
                    materials = db_actions.get_work_material(user_id, call.data[16:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª", reply_markup=buttons.admin_choose_material(materials))
                elif call.data[:15] == "3admin_material":
                    db_actions.set_user_system_key(user_id, "material_id", call.data[15:])
                    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Å. ‚Ññ. —Ç–µ—Ö–Ω–∏–∫–∏")
                    db_actions.set_user_system_key(user_id, "index", 29)
                elif call.data[:15] == "4admin_category":
                    subcategories = db_actions.get_work_subcategories(user_id, call.data[15:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.admin_choose_subcategory4(subcategories))
                elif call.data[:18] == "4admin_subcategory":
                    work_type = db_actions.get_work_type(user_id, call.data[18:])
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.admin_choose_work_type4(work_type))
                elif call.data[:16] == "4admin_work_type":
                    db_actions.set_user_system_key(user_id, "work_type_id", call.data[16:])
                    smr = db_actions.select_material_smr(user_id, call.data[16:])
                    if smr:
                        materials = db_actions.get_work_material(user_id, call.data[16:])
                        bot.send_message(user_id, "üìè –í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")
                        db_actions.set_user_system_key(user_id, "index", 30)
                    else:
                        bot.send_message(user_id, "‚ùå –í –¥–∞–Ω–Ω–æ–º –≤–∏–¥–µ —Ä–∞–±–æ—Ç—ã –Ω–µ —Å–æ–∑–¥–∞–Ω –°–ú–†!")
                elif call.data == "attach_foreman_to_object":
                    objects = db_actions.get_all_objects(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç", reply_markup=buttons.choose_object_to_attach(objects))
                elif call.data == "unpin_foreman":
                    objects = db_actions.get_all_objects(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç", reply_markup=buttons.choose_object_to_unpin(objects))
                elif call.data[:19] == "choose_object_unpin":
                    db_actions.unpin_foreman_from_object(user_id, call.data[19:])
                    bot.send_message(user_id, "‚úÖ –ü—Ä–æ—Ä–∞–± –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω")
                elif call.data[:20] == "choose_object_attach":
                    foremans = db_actions.get_foremans(user_id)
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ä–∞–±–∞", reply_markup=buttons.choose_foreman_to_attach(foremans))
                    db_actions.set_user_system_key(user_id, "attach_object_name", call.data[20:])
                elif call.data[:21] == "choose_foreman_attach":
                    object_name = db_actions.get_user_system_key(user_id, "attach_object_name")
                    db_actions.attach_foreman_to_object(user_id=call.data[21:], object_name=object_name)
                    bot.send_message(user_id, f"‚úÖ –ü—Ä–æ—Ä–∞–± –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ –æ–±—ä–µ–∫—Ç—É {object_name}")
            if call.data == "registration_foreman":
                bot.send_message(user_id, "‚úèÔ∏è –ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –∑–∞–ø–æ–ª–Ω–∏ –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É, —É—Ç–æ—á–Ω–∏ —Å–≤–æ—ë –§–ò–û.")
                db_actions.set_user_system_key(user_id, "index", 0)
        if call.data == "accept_reg":
            foreman_user_id = db_actions.get_user_id_from_topic(call.message.reply_to_message.id)
            foreman_full_name = db_actions.get_user_system_key(foreman_user_id, "full_name")
            db_actions.set_user_is_foreman(foreman_user_id)
            db_actions.set_user_full_name(foreman_user_id, foreman_full_name)
            bot.send_message(chat_id=foreman_user_id, text='‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞!\n\n–ü—Ä–æ–ø–∏—à–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞')
        elif call.data == "reject_reg":
            foreman_user_id = db_actions.get_user_id_from_topic(call.message.reply_to_message.id)
            bot.send_message(chat_id=foreman_user_id, text='‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        
        
        
        elif db_actions.user_is_foreman(user_id):
            # –°–¢–ê–†–¢–û–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ü–†–û–†–ê–ë–ê
            if call.data == "foreman_select_objects":
                objects = db_actions.get_foreman_objects(user_id)
                if objects:
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –æ–±—ä–µ–∫—Ç", reply_markup=buttons.get_object_buttons(objects))
                else:
                    bot.send_message(user_id, "‚ùå –û–±—ä–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            elif call.data[:14] == "foreman_object":
                db_actions.set_user_system_key(user_id, "object_id", call.data[14:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=buttons.foreman_object_buttons())
            elif call.data == "go_work":
                bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç', reply_markup=buttons.foreman_work_object())
            elif call.data == "add_work":
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.foreman_choose_type_work())
            elif call.data[:13] == "work_category":
                db_actions.set_user_system_key(user_id, "category_id", call.data[13:])
                bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
                db_actions.set_user_system_key(user_id, "index", 3)
            elif call.data == "get_report":
                object_id = db_actions.get_user_system_key(user_id, "object_id")
                db_actions.db_export_object_report(object_id)
                try:
                    if not db_actions.db_export_object_report(object_id):
                        bot.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞")
                        return
                    with open("report.xlsx", 'rb') as f:
                        bot.send_document(user_id, f)
                    try:
                        os.remove("report.xlsx")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")
                except Exception as e:
                    bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞: {str(e)}")
            elif call.data[:14] == "category_work1":
                db_actions.set_user_system_key(user_id, "category_id", call.data[14:])
                subcategories = db_actions.get_work_subcategories(user_id, category_id=call.data[14:])
                if subcategories:
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_need_choose_subcategory(subcategories))
                else:
                    bot.send_message(user_id, "‚ùå –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            elif call.data[:17] == "work_subcategory1":
                db_actions.set_user_system_key(user_id, "subcategory_id", call.data[17:])
                bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã")
                db_actions.set_user_system_key(user_id, "index", 4)
            elif call.data == "add_materials":
                object_id = db_actions.get_user_system_key(user_id, "object_id")
                category = db_actions.get_work_categories(user_id, object_id)
                if category:
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_need_choose_category(category))
                else:
                    bot.send_message(user_id, "‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            elif call.data == "add_smr":
                object_id = db_actions.get_user_system_key(user_id, "object_id")
                category = db_actions.get_work_categories(user_id, object_id)
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_choose_category1(category))
            elif call.data[:17] == "1foreman_category":
                subcategory = db_actions.get_work_subcategories(user_id, call.data[17:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_choose_subcategory1(subcategory))
            elif call.data[:20] == "1foreman_subcategory":
                work_type = db_actions.get_work_type(user_id, call.data[20:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.foreman_choose_work_type1(work_type))
            elif call.data[:18] == "1foreman_work_type":
                db_actions.set_user_system_key(user_id, "work_type_id", call.data[18:])
                smr = db_actions.select_material_smr(user_id, call.data[18:])
                if not smr:
                    bot.send_message(user_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º")
                    db_actions.set_user_system_key(user_id, "index", 34)
                else:
                    bot.send_message(user_id, "‚ùå –î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Ä–∞–±–æ—Ç—ã –°–ú–† —É–∂–µ —É–∫–∞–∑–∞–Ω!")
            elif call.data[:16] == "foreman_category":
                db_actions.set_user_system_key(user_id, "category_id", call.data[16:])
                subcategory = db_actions.get_work_subcategories(user_id, category_id=call.data[16:])
                if subcategory:
                    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.foreman_choose_subcategory(subcategory))
                else:
                    bot.send_message(user_id, "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            elif call.data[:19] == "foreman_subcategory":
                db_actions.set_user_system_key(user_id, "subcategory_id", call.data[19:])
                work_type = db_actions.get_work_type(user_id, call.data[19:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.foreman_choose_work_type(work_type))
            elif call.data[:17] == "foreman_work_type":
                db_actions.set_user_system_key(user_id, "work_type_id", call.data[17:])
                smr = db_actions.select_material_smr(user_id, call.data[17:])
                if not smr:
                    bot.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –°–ú–†!")
                else:
                    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞")
                    db_actions.set_user_system_key(user_id, "index", 8)
            elif call.data == "add_technique":
                categories = db_actions.get_work_categories(user_id, object_id=db_actions.get_user_system_key(user_id, "object_id"))
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.categories_technique_buttons(categories))
            elif call.data[:20] == "categories_technique":
                subcategory = db_actions.get_work_subcategories(user_id, call.data[20:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=buttons.subcategories_technique_buttons(subcategory))
            elif call.data[:23] == "subcategories_technique":
                work_type = db_actions.get_work_type(user_id, call.data[23:])
                bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç—ã", reply_markup=buttons.work_types_technique_buttons(work_type))
            elif call.data[:20] == "work_types_technique":
                db_actions.set_user_system_key(user_id, "work_type_id", call.data[20:])
                bot.send_message(user_id, "üöõ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏")
                db_actions.set_user_system_key(user_id, "index", 15)
            elif call.data == "go_coming":
                bot.send_message(user_id, "‚è∞ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–∏—Ö–æ–¥–∞\n" \
                "–í–≤–æ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥-–º–µ—Å—è—Ü-—á–∏—Å–ª–æ (–ù–∞–ø—Ä–∏–º–µ—Ä: 2025-12-31)")
                db_actions.set_user_system_key(user_id, "index", 21)

    @bot.message_handler(content_types=['text', 'photo'])
    def text_message(message):
        buttons = Bot_inline_btns()
        user_input = message.text
        user_id = message.chat.id
        code = db_actions.get_user_system_key(user_id, "index")
        if db_actions.user_is_existed(user_id):
            if code == 0:
                db_actions.set_user_system_key(user_id, "full_name", user_input)
                topic_id = telebot.TeleBot.create_forum_topic(bot, chat_id=group_id,
                                                            name=f'{message.from_user.first_name} '
                                                                f'{message.from_user.last_name} –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
                                                            icon_color=0x6FB9F0).message_thread_id
                bot.forward_message(chat_id=group_id, from_chat_id=message.chat.id, message_id=message.id,
                                    message_thread_id=topic_id)
                bot.send_message(chat_id=group_id, message_thread_id=topic_id, text=f"–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n–í—ã—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\nUsername –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username}", reply_markup=buttons.manager_btns())
                db_actions.set_user_id_in_topic(user_id, topic_id)
                bot.send_message(user_id, '‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ!')
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 1:
                db_actions.write_new_object(user_id, user_input)
                object_names = db_actions.get_all_objects(user_id)
                objects_list = "\n".join([f"{i[1]}" for i in object_names])
                bot.send_message(user_id, "‚úÖ –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∞–Ω, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤:\n" \
                f"{objects_list}")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 2:
                # user_input - category name
                object_id = db_actions.get_user_system_key(user_id, "admin_object_id")
                db_actions.add_work_categories(user_id, object_id, user_input)
                bot.send_message(user_id, "‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞")
                db_actions.set_user_system_key(user_id, "index", None)

            elif code == 3:
                category_id = db_actions.get_user_system_key(user_id, "category_id")
                db_actions.add_work_subcategories(user_id, category_id, user_input)
                bot.send_message(user_id, "‚úÖ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 4:
                subcategory_id = db_actions.get_user_system_key(user_id, "subcategory_id")
                db_actions.set_user_system_key(user_id, "work_type_name", user_input)
                bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")               
                db_actions.set_user_system_key(user_id, "index", 5)
            elif code == 5:
                subcategory_id = db_actions.get_user_system_key(user_id, "subcategory_id")
                work_name = db_actions.get_user_system_key(user_id, "work_type_name")
                db_actions.add_work_type(user_id, subcategory_id, work_name, user_input)
                bot.send_message(user_id, "‚úÖ –¢–∏–ø —Ä–∞–±–æ—Ç—ã –∑–∞–ø–∏—Å–∞–Ω") 
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 8:
                db_actions.set_user_system_key(user_id, "material_name", user_input)
                bot.send_message(user_id, "üë∑‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞")
                db_actions.set_user_system_key(user_id, "index", 10)
            elif code == 10:
                db_actions.set_user_system_key(user_id, "material_counterparty", user_input)
                bot.send_message(user_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º")
                db_actions.set_user_system_key(user_id, "index", 11)
            elif code == 11:
                db_actions.set_user_system_key(user_id, "material_volume", user_input)
                bot.send_message(user_id, "üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É")
                db_actions.set_user_system_key(user_id, "index", 12)
            elif code == 12:
                from datetime import date
                work_type_id = db_actions.get_user_system_key(user_id, "work_type_id")
                name = db_actions.get_user_system_key(user_id, "material_name")
                norm = db_actions.get_user_system_key(user_id, "material_norm")
                unit = db_actions.get_user_system_key(user_id, "material_unit")
                counterparty = db_actions.get_user_system_key(user_id, "material_counterparty")
                registration_number = db_actions.get_user_system_key(user_id, "material_registration_number")
                volume = db_actions.get_user_system_key(user_id, "material_volume")
                today = date.today()
                db_actions.add_work_material(user_id, work_type_id, today, name, norm, unit, counterparty, registration_number, volume, user_input)
                bot.send_message(user_id, "‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 15:
                db_actions.set_user_system_key(user_id, "technique_name", user_input)
                bot.send_message(user_id, "üë∑‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞")
                db_actions.set_user_system_key(user_id, "index", 16)
            elif code == 16:
                db_actions.set_user_system_key(user_id, "technique_contragent", user_input)
                bot.send_message(user_id, "#Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π ‚Ññ —Ç–µ—Ö–Ω–∏–∫–∏")
                db_actions.set_user_system_key(user_id, "index", 17)
            elif code == 17:
                db_actions.set_user_system_key(user_id, "technique_contragent", user_input)
                bot.send_message(user_id, "üìè –í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")
                db_actions.set_user_system_key(user_id, "index", 18)
            elif code == 18:
                db_actions.set_user_system_key(user_id, "technique_unit", user_input)
                bot.send_message(user_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º (–∫–æ–ª-–≤–æ —á–∞—Å–æ–≤)")
                db_actions.set_user_system_key(user_id, "index", 19)
            elif code == 19:
                db_actions.set_user_system_key(user_id, "technique_volume", user_input)
                bot.send_message(user_id, "üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ —á–∞—Å")
                db_actions.set_user_system_key(user_id, "index", 20)
            elif code == 20:
                object_id = db_actions.get_user_system_key(user_id, "object_id")
                work_type_id = db_actions.get_user_system_key(user_id, "work_type_id")
                name = db_actions.get_user_system_key(user_id, "technique_name")
                contragent = db_actions.get_user_system_key(user_id, "technique_contragent")
                number = db_actions.get_user_system_key(user_id, "technique_number")
                unit = db_actions.get_user_system_key(user_id, "technique_unit")
                volume = db_actions.get_user_system_key(user_id, "technique_volume")
                db_actions.add_technique(user_id, object_id, work_type_id, name, contragent, number, unit, volume, user_input)
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 21:
                db_actions.set_user_system_key(user_id, "coming_date", user_input)
                bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∞")
                db_actions.set_user_system_key(user_id, "index", 22)
            elif code == 22:
                db_actions.set_user_system_key(user_id, "coming_name", user_input)
                bot.send_message(user_id, "üìè –í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")
                db_actions.set_user_system_key(user_id, "index", 23)
            elif code == 23:
                db_actions.set_user_system_key(user_id, "coming_unit", user_input)
                bot.send_message(user_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º")
                db_actions.set_user_system_key(user_id, "index", 24)
            elif code == 24:
                db_actions.set_user_system_key(user_id, "coming_volume", user_input)
                bot.send_message(user_id, "üöö –í–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")
                db_actions.set_user_system_key(user_id, "index", 25)
            elif code == 25:
                db_actions.set_user_system_key(user_id, "coming_supplier", user_input)
                bot.send_message(user_id, "üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –±–µ–∑ –ù–î–°")
                db_actions.set_user_system_key(user_id, "index", 26)
            elif code == 26:
                object_id = db_actions.get_user_system_key(user_id, "object_id")
                today = db_actions.get_user_system_key(user_id, "coming_date")
                name = db_actions.get_user_system_key(user_id, "coming_name")
                unit = db_actions.get_user_system_key(user_id, "coming_unit")
                volume = db_actions.get_user_system_key(user_id, "coming_volume")
                supplier = db_actions.get_user_system_key(user_id, "coming_supplier")
                db_actions.add_list_coming(user_id, object_id, today, name, unit, volume, supplier, user_input)
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 27:
                row_id = db_actions.get_user_system_key(user_id, "material_id")
                norm = db_actions.get_user_system_key(user_id, "material_norm")
                db_actions.add_mateials_norm(user_id, norm, row_id)
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 28:
                db_actions.add_materials_unit(user_id, user_input, row_id=db_actions.get_user_system_key(user_id, "material_id"))
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 29:
                db_actions.add_materials_number(user_id, user_input, row_id=db_actions.get_user_system_key(user_id, "material_id"))
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 30:
                db_actions.set_user_system_key(user_id, "material_unit", user_input)
                bot.send_message(user_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º")
                db_actions.set_user_system_key(user_id, "index", 31)
            elif code == 31:
                db_actions.set_user_system_key(user_id, "material_volume", user_input)
                bot.send_message(user_id, "üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É")
                db_actions.set_user_system_key(user_id, "index", 32)
            elif code == 32:
                work_type = db_actions.get_user_system_key(user_id, "work_type_id")
                unit = db_actions.get_user_system_key(user_id, "material_unit")
                volume = db_actions.get_user_system_key(user_id, "material_volume")
                db_actions.edit_material_smr(user_id, unit, volume, user_input, work_type)
                bot.send_message(user_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
                db_actions.set_user_system_key(user_id, "index", None)
            elif code == 34:
                db_actions.set_user_system_key(user_id, "material_volume", user_input)
                bot.send_message(user_id, "üìè –í–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è")
                db_actions.set_user_system_key(user_id, "index", 35)
            elif code == 35:
                db_actions.set_user_system_key(user_id, "material_unit", user_input)
                bot.send_message(user_id, "üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É")
                db_actions.set_user_system_key(user_id, "index", 36)
            elif code == 36:
                from datetime import date
                today = date.today()
                work_type_id = db_actions.get_user_system_key(user_id, "work_type_id")
                volume = db_actions.get_user_system_key(user_id, "material_volume")
                unit = db_actions.get_user_system_key(user_id, "material_unit")
                db_actions.add_material_smr(user_id, date=today, volume=volume, unit=unit, cost=user_input, work_type_id=work_type_id)
                bot.send_message(user_id, "‚úÖ –°–ú–† —Å–æ–∑–¥–∞–Ω!")
                db_actions.set_user_system_key(user_id, "index", None)
    
    bot.polling(none_stop=True)



if '__main__' == __name__:
    os_type = platform.system()
    work_dir = os.path.dirname(os.path.realpath(__file__))
    config = ConfigParser(f'{work_dir}/{config_name}', os_type)
    db = DB(config.get_config()['db_file_name'], Lock())
    group_id = config.get_config()['group_id']
    db_actions = DbAct(db, config, config.get_config()['xlsx_path'])
    bot = telebot.TeleBot(config.get_config()['tg_api'])
    main()